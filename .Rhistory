install.packages("digest")
devtools::install_github("charlie86/spotifyr")
install.packages("Rcpp")
devtools::install_github("charlie86/spotifyr")
library(spotifyr)
playlist_username <- 'sdumble1'
playlist_uris <- c('7ikpAcYMFlD9ihQ1POKtAb')
my_playlist_audio_features <- get_playlist_audio_features(playlist_username,
playlist_uris,authorization  =
get_spotify_authorization_code(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
my_playlist_audio_features <- get_playlist_audio_features(playlist_username,
playlist_uris,authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
my_playlist_audio_features <- get_playlist_audio_features(playlist_username,
playlist_uris,authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
View(my_playlist_audio_features)
View(my_playlist_audio_features[[28]][[42]])
View(my_playlist_audio_features[[28]][[1]])
my_playlist_audio_features<-read.csv("data.csv")
my_playlist_audio_features<-read.csv("C:/Users/sdumb/Dropbox (SSD)/ShinyArchive/dancemusic/data.csv")
mean(my_playlist_audio_features$track.popularity)
mean(my_playlist_audio_features$danceability)
get_track_audio_features(my_playlist_audio_features$track.id[1],
authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
get_track_audio_analysis(my_playlist_audio_features$track.id[1],
authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
z1<-get_track_audio_analysis(my_playlist_audio_features$track.id[1],
authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
names(z1)
my_playlist_audio_features$track.artists
my_playlist_audio_features$track.artists[[1]][1]
my_playlist_audio_features$track.artists[[1]][1,]
my_playlist_audio_features$track.artists[[1]][1,2]
get_artists(my_playlist_audio_features$track.artists[[1]][1,2],
authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
get_artist_audio_features(my_playlist_audio_features$track.artists[[1]][1,2],
authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
table(my_playlist_audio_features$mode)
View(my_playlist_audio_features)
ggplot(data=my_playlist_audio_features,aes(y=track_popularity,x=energy))+
geom_point()
library(ggplot2)
ggplot(data=my_playlist_audio_features,aes(y=track_popularity,x=energy))+
geom_point()
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=energy))+
geom_point()
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=energy))+
geom_point()+
geom_label(aes(label=track.name))
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=energy))+
geom_point()+
geom_label(aes(label=track.name),alpha=0.5)
filter(my_playlist_audio_features,danceability=max(danceability))
library(dplyr)
filter(my_playlist_audio_features,danceability=max(danceability))
filter(my_playlist_audio_features,danceability==max(danceability))
filter(my_playlist_audio_features,danceability==max(danceability)) %>%
select(track.name)
filter(my_playlist_audio_features,energy==max(energy)) %>%
select(track.name)
filter(my_playlist_audio_features,tempo ==max(tempo)) %>%
select(track.name)
filter(my_playlist_audio_features,loudness   ==max(loudness  )) %>%
select(track.name)
filter(my_playlist_audio_features,valence ==max(valence  )) %>%
select(track.name)
filter(my_playlist_audio_features,liveness  ==max(liveness   )) %>%
select(track.name)
filter(my_playlist_audio_features,danceability==min(danceability)) %>%
select(track.name)
filter(my_playlist_audio_features,energy==min(energy)) %>%
select(track.name)
filter(my_playlist_audio_features,liveness  ==min(liveness   )) %>%
select(track.name)
filter(my_playlist_audio_features,valence ==min(valence  )) %>%
select(track.name)
filter(my_playlist_audio_features,loudness   ==min(loudness  )) %>%
select(track.name)
filter(my_playlist_audio_features,tempo ==min(tempo)) %>%
select(track.name)
table(my_playlist_audio_features$key_name)
summary(my_playlist_audio_features$tempo)
filter(my_playlist_audio_features,mode==1 & key_name%in%c("D","G") & tempo>120 & tempo<130) %>%
select(track.name)
filter(my_playlist_audio_features,mode==1 & key_name%in%c("D","G") & tempo>120 & tempo<130 & time.signature==4) %>%
select(track.name)
filter(my_playlist_audio_features,mode==1 & key_name%in%c("D","G") & tempo>120 & tempo<130 & time_signature==4) %>%
select(track.name)
filter(my_playlist_audio_features,mode==0 & !key_name%in%c("D","G") & (tempo<120 | tempo>130) & !time_signature==4) %>%
select(track.name)
summary(my_playlist_audio_features$track.album.release_date)
sort(my_playlist_audio_features$track.album.release_date)
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=valence))+
geom_point()+
geom_label(aes(label=track.name),alpha=0.5)
library(openxlsx)
library(tidyverse)
data.frame(x=c(1,1),y=c(2,4),grp=c("f1","f2"))
?
geom_segment
ggplot(data=data1,aes(x=x,y=y))+
geom_segment(yend=0)
data1<-data.frame(x=c(1,1),y=c(2,4),grp=c("f1","f2"))
ggplot(data=data1,aes(x=x,y=y))+
geom_segment(yend=0)
ggplot(data=data1,aes(x=x,y=y))+
geom_segment(yend=0,xend=0)
ggplot(data=data1,aes(x=x,y=y,group=grp,col=grp))+
geom_segment(yend=0,xend=0)
ggplot(data=data1,aes(x=x,y=y,group=grp,col=grp))+
geom_segment(yend=0,xend=0)+
ylim(0,5)+
xlim(0,1)
ggplot(data=data1,aes(x=x,y=y,xend=0,yend=0,group=grp,col=grp))+
geom_segment()+
ylim(0,5)+
xlim(0,1)
ggplot(data=data1,aes(x=x,y=y,xend=0,yend=0,group=grp,col=grp))+
geom_segment()
ggplot(data=data1,aes(x=x,y=y,xend=0,yend=0,col=grp))+
geom_segment()
library(learnr)
library(ggplot2)
tutorial_options(exercise.timelimit = 10)
BeanSurvey<-read.csv("bean_survey.csv")[,-1]
BeanSurvey$AGEHH<-c(32,57,20,55,78,42,28,49,41,54,65,63,32,29,43,68,53,39,25,44,23,47,32,26,25,29,44,23,58,69,26,65,75,51,38,24,35,29,37,45,50,23,60,32,70,43,51,28,65,33)
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA)) +
geom_point(colour="red")
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA,colour=GENDERHH)) +
geom_point()
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA,colour="blue")) +
geom_point()
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA)) +
geom_point(colour=GENDERHH)
ggplot(data = BeanSurvey,  aes(y = AGEHH,x=GENDERHH,colour=GENDERHH)) +
geom_boxplot()
ggplot(data =BeanSurvey,  aes(y = AGEHH,x=GENDERHH,colour=GENDERHH)) +
geom_boxplot(colour="blue")
ggplot(data = BeanSurvey,  aes(y = AGEHH,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()
ggplot(data=BeanSurvey,aes(x=LANDAREA))+
geom_histogram(fill="green")
#second plot - setting fill = GENDERHH gives us overlapping histograms with different colours. Can be useful for comparing distributions, but a little confusing, because the genders are stacked on top of each other so comparing is not easy. We will learn how to separate this out a little bit later in the course.
ggplot(data=BeanSurvey,aes(x=LANDAREA,fill=GENDERHH))+
geom_histogram()
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_manual(values=c("purple","yellow"))
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_manual(values=c("chartreuse","blanchedalmond"))
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_manual(values=c("mediumred","paleblue"))
ggplot(data = BeanSurvey,  aes(y = Income,x=AgeGrp,fill=AgeGrp)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")
ggplot(data = BeanSurvey,  aes(y = Income,x=AgeGrp,fill=AgeGrp)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA)) +
geom_point()
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA)) +
geom_point()+
geom_smooth()
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA))+
geom_point()+
geom_boxplot()
ggplot(data = BeanSurvey,  aes(x = AGEHH,y=LANDAREA))+
geom_point()+
geom_bar()
data<-read.xlsx("data.xlsx")
library(openxlsx)
library(tidyverse)
library(lmerTest)
library(emmeans)
data<-read.xlsx("data.xlsx")
data$Treatment<-paste(data$Fallow,data$Nitrogen)
ggplot(data,aes(y=grain,x=Nitrogen,group=Farmer))+
geom_point()+
geom_line()+
facet_wrap(~Fallow)
#devtools::install_github("charlie86/spotifyr")
library(spotifyr)
playlist_username <- 'sdumble1'
playlist_uris <- c('7ikpAcYMFlD9ihQ1POKtAb')
my_playlist_audio_features <- get_playlist_audio_features(playlist_username,
playlist_uris,authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
mean(my_playlist_audio_features$track.popularity)
mean(my_playlist_audio_features$danceability)
table(my_playlist_audio_features$mode)
library(ggplot2)
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=valence))+
geom_point()+
geom_label(aes(label=track.name),alpha=0.5)
library(dplyr)
filter(my_playlist_audio_features,danceability==max(danceability)) %>%
select(track.name)
filter(my_playlist_audio_features,danceability==min(danceability)) %>%
select(track.name)
filter(my_playlist_audio_features,energy==min(energy)) %>%
select(track.name)
filter(my_playlist_audio_features,tempo ==max(tempo)) %>%
select(track.name)
filter(my_playlist_audio_features,loudness   ==max(loudness  )) %>%
select(track.name)
filter(my_playlist_audio_features,liveness  ==max(liveness   )) %>%
select(track.name)
filter(my_playlist_audio_features,mode==1 & key_name%in%c("D","G") & tempo>120 & tempo<130 & time.signature==4) %>%
select(track.name)
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=valence))+
geom_point()+
geom_label(aes(label=track.name),alpha=0.5)
mean(my_playlist_audio_features$track.popularity)
runif(1000,9999,1)
runif(1,1000,9999)
library(learnr)
library(ggplot2)
tutorial_options(exercise.timelimit = 10)
BeanSurvey<-read.csv("bean_survey.csv")[,-1]
BeanSurvey$AGEHH<-c(32,57,20,55,78,42,28,49,41,54,65,63,32,29,43,68,53,39,25,44,23,47,32,26,25,29,44,23,58,69,26,65,75,51,38,24,35,29,37,45,50,23,60,32,70,43,51,28,65,33)
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)
#Remember to change the fill aesthetic as well as the x aesthetic
#I also moved gender to make up the rows and age group to make the columns, as my boxes were being squashed too much otherwise
#This does mean that the x axis labels are now illegible though!
#However the colour coding means that we can easily distinguish the parties without the x axis labels anyway
#We will learn how to remove, or modify, those x axis labels in the next section about themes
ggplot(data = BeanSurvey,  aes(y = VILLAGE,x=,fill=VILLAGE)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~GENDERHH)
#Remember to change the fill aesthetic as well as the x aesthetic
#I also moved gender to make up the rows and age group to make the columns, as my boxes were being squashed too much otherwise
#This does mean that the x axis labels are now illegible though!
#However the colour coding means that we can easily distinguish the parties without the x axis labels anyway
#We will learn how to remove, or modify, those x axis labels in the next section about themes
ggplot(data = BeanSurvey,  aes(y =BEANSHARVESTED_LR ,x=VILLAGE,fill=VILLAGE)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~GENDERHH)
BeanSurvey<-subset(BeanSurvey,is.na(GENDERHH)==FALSE)
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)
#Remember to change the fill aesthetic as well as the x aesthetic
#I also moved gender to make up the rows and age group to make the columns, as my boxes were being squashed too much otherwise
#This does mean that the x axis labels are now illegible though!
#However the colour coding means that we can easily distinguish the parties without the x axis labels anyway
#We will learn how to remove, or modify, those x axis labels in the next section about themes
ggplot(data = BeanSurvey,  aes(y =BEANSHARVESTED_LR ,x=VILLAGE,fill=VILLAGE)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~GENDERHH)
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Village",y="Beans Harvested In Long Rains (Kg)")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")+
theme(axis.text.x = element_blank())
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")+
theme(legend.position = "none")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")+
theme(legend.position = "none")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")+
theme(legend.position = "none")+
theme_light()
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")+
theme_light(legend.position = "none")
ggplot(data = BeanSurvey,  aes(y = BEANSHARVESTED_LR,x=GENDERHH,fill=GENDERHH)) +
geom_boxplot()+
scale_y_log10()+
scale_fill_brewer(palette="Dark2")+
facet_wrap(~VILLAGE)+
labs(x="Gender of Household Head",y="Beans Harvested In Long Rains (Kg)",
fill="Gender of Household Head",
title="Boxplots showing difference in quantity of harvested beans by gender",
subtitle="Split by village",
caption="Data collected from interviews with 49 farmers conducted in May 2019")+
theme_light()+
theme(legend.position = "none")
ggplot(BeanSurvey,aes(y=AGEHH))+
geom_histogram()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(x=AGEHH))+
geom_histogram()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(x=AGEHH))+
geom_histogram(binwidth =5)+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(x=AGEHH))+
geom_hist(binwidth =5)+
facet_wrap(VILLAGE)
ggplot(BeanSurvey,aes(y=DECISIONS,group=GENDERHH))+
geom_bar()
ggplot(BeanSurvey,aes(y=DECISIONS,fill=GENDERHH))+
geom_bar(position="dodge")
ggplot(BeanSurvey,aes(y=DECISIONS,fill=GENDERHH))+
geom_bar()
ggplot(BeanSurvey,aes(y=DECISIONS,fill=GENDERHH))+
geom_bar()+
scale_fill_manual(values=c("purple","orange"))
660*6
27/7
5*7
ggplot(BeanSurvey,aes(y=BEANSHARVESTED_LR,x=BEANSHARVESTED_SR))+
geom_point()
BeanSurvey<-read.csv("bean_survey.csv")[,-1]
BeanSurvey$AGEHH<-c(32,57,20,55,78,42,28,49,41,54,65,63,32,29,43,68,53,39,25,44,23,47,32,26,25,29,44,23,58,69,26,65,75,51,38,24,35,29,37,45,50,23,60,32,70,43,51,28,65,33)
BeanSurvey<-mutate(BeanSurvey$GENDERHH,ifelse(is.na(GENDERHH),"male",as.character(GENDERHH)))
library(dplyr)
BeanSurvey<-mutate(BeanSurvey$GENDERHH,ifelse(is.na(GENDERHH),"male",as.character(GENDERHH)))
BeanSurvey<-mutate(BeanSurvey,GENDERHH=ifelse(is.na(GENDERHH),"male",as.character(GENDERHH)))
table(BeanSurvey$GENDERHH)
summary(BeanSurvey$BEANSHARVESTED_LR)
summary(BeanSurvey$BEANSHARVESTED_SR)
ggplot(BeanSurvey,aes(y=BEANSHARVESTED_LR,x=BEANSHARVESTED_SR))+
geom_point()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=AGEHH,x=LANDAREA))+
geom_point()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=LANDAREA,x=AGEHH))+
geom_point()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=LANDAREA,x=ADULTS))+
geom_point()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=BEANSHARVESTED_LR,x=BEANSPLANTED_LR))+
geom_point()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=BEANSHARVESTED_LR,x=BEANSPLANTED_LR))+
geom_point()+
geom_smooth()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=BEANSHARVESTED_LR,x=BEANSPLANTED_LR))+
geom_point()+
facet_wrap(~VILLAGE)
ggplot(BeanSurvey,aes(y=BEANSHARVESTED_LR,x=BEANSPLANTED_LR,col=VILLAGE))+
geom_point()
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_point()
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=45))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=20,size=2))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=20,size=6))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=20,size=10))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=10,size=8))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=LABOR))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=15,size=8))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=HHTYPE))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=15,size=8))
ggplot(data=BeanSurvey,aes(y=BEANSHARVESTED_LR,x=HHTYPE))+
geom_point()+
theme(axis.text.x = element_text(angle=15,size=8))
ggplot(data=BeanSurvey,aes(x=GENDERHH,fill=SELLBEANS))+
geom_bar()+
facet_wrap(~VILLAGE)
ggplot(data=BeanSurvey,aes(x=GENDERHH,fill=SELLBEANS))+
geom_bar(position="fill")+
facet_wrap(~VILLAGE)
library(spotifyr)
playlist_username <- 'sdumble1'
playlist_uris <- c('7ikpAcYMFlD9ihQ1POKtAb')
my_playlist_audio_features <- get_playlist_audio_features(playlist_username,
playlist_uris,authorization  =
get_spotify_access_token(client_id = ("83a345c2535b46b2a2dbbf87918c21b0"),
client_secret = ("0f94904a924e4e78af85234c03cbba2b")))
mean(my_playlist_audio_features$track.popularity)
mean(my_playlist_audio_features$danceability)
table(my_playlist_audio_features$mode)
library(ggplot2)
ggplot(data=my_playlist_audio_features,aes(y=track.popularity,x=valence))+
geom_point()+
geom_label(aes(label=track.name),alpha=0.5)
library(dplyr)
filter(my_playlist_audio_features,danceability==max(danceability)) %>%
select(track.name)
filter(my_playlist_audio_features,danceability==min(danceability)) %>%
select(track.name)
filter(my_playlist_audio_features,energy==min(energy)) %>%
select(track.name)
filter(my_playlist_audio_features,tempo ==max(tempo)) %>%
select(track.name)
filter(my_playlist_audio_features,loudness   ==max(loudness  )) %>%
select(track.name)
filter(my_playlist_audio_features,liveness  ==max(liveness   )) %>%
select(track.name)
filter(my_playlist_audio_features,mode==1 & key_name%in%c("D","G") & tempo>120 & tempo<130 & time.signature==4) %>%
select(track.name)
filter(my_playlist_audio_features,mode==1 & key_name%in%c("D","G") & tempo>120 & tempo<130 & time_signature==4) %>%
select(track.name)
View(my_playlist_audio_features)
renv::init()
